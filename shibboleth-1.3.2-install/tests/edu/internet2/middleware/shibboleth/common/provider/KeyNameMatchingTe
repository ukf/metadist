/*
 * Copyright [2005] [University Corporation for Advanced Internet Development, Inc.]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package edu.internet2.middleware.shibboleth.common.provider;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.security.cert.CertificateFactory;
import java.security.cert.X509Certificate;

import javax.xml.parsers.DocumentBuilderFactory;

import junit.framework.TestCase;

import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.xml.security.keys.content.KeyName;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Text;

/**
 * @author Walter Hoehn
 */
public class KeyNameMatchingTests extends TestCase {

	public KeyNameMatchingTests(String name) {

		super(name);
		BasicConfigurator.resetConfiguration();
		BasicConfigurator.configure();
		Logger.getRootLogger().setLevel(Level.OFF);
	}

	public static void main(String[] args) {

		junit.textui.TestRunner.run(KeyNameMatchingTests.class);
		BasicConfigurator.configure();
		Logger.getRootLogger().setLevel(Level.OFF);
	}

	protected void setUp() throws Exception {

		super.setUp();
	}

	public void testMatchViaSubjectAltName() {

		X509Certificate cert = null;
		try {
			InputStream certInStream = new FileInputStream("data/keyNameMatch.crt");
			CertificateFactory certFactory = CertificateFactory.getInstance("X.509");
			cert = (X509Certificate) certFactory.generateCertificate(new BufferedInputStream(certInStream));

		} catch (Exception e) {
			fail("Encountered an exception loading certificate.");
		}

		KeyName keyName = null;
		try {
			DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
			docFactory.setNamespaceAware(true);
			Document placeHolder = docFactory.newDocumentBuilder().newDocument();

			Element keyNameNode = placeHolder.createElementNS("http://www.w3.org/2000/09/xmldsig#", "KeyName");
			Text valueNode = placeHolder.createTextNode("ktang.oerc.ox.ac.uk");
			keyNameNode.appendChild(valueNode);
			keyName = new KeyName(keyNameNode, null);
		} catch (Exception e) {
			fail("Encountered an exception constructing keyname.");
		}

		assertTrue("Expected to match via subject alt name.", ShibbolethTrust.matchKeyName(cert, keyName));

	}
}